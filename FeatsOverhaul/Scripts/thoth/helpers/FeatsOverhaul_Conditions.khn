
function StatusDoesNotInvokeOnStatusApply()
	return StatusId('PERFORM_POSITIVE_DOS2_1')
    | StatusId('PERFORM_POSITIVE_DOS2_2')
    | StatusId('PERFORM_POSITIVE_DOS2_3')
    | StatusId('DOS2_JOIN_1')
    | StatusId('DOS2_JOIN_2')
    | StatusId('DOS2_JOIN_3')
    | StatusId('PERFORM_POSITIVE')
    | StatusId('PERFORM_POSITIVE_THEPOWER')
    | StatusId('PERFORM_POSITIVE_STARGAZING')
    | StatusId('PERFORM_POSITIVE_BARDDANCE')
    | StatusId('PERFORM_NEGATIVE')
    | StatusId('DASH')
    | StatusId('DASH_STACKED')
    | StatusId('DASH_STACKED_2')
    | StatusId('SNEAKING') 
    | StatusId('SNEAKING_CLEAR')
    | StatusId('SNEAKING_LIGHTLY_OBSCURED')
    | StatusId('SNEAKING_HEAVILY_OBSCURED')
    | StatusId('DISENGAGE') 
    | StatusId('NON_LETHAL')
    | StatusId('MONK_SOUND_SWITCH')
    | StatusId('FLANKED')
    | StatusId('MAG_FROST_DURATION_TECHNICAL')
    | StatusId('MAG_FROST_FROZEN_CHECK_TECHNICAL') 
    | StatusId('MAG_RADIANT_RADIATING_ORB_DURATION_TECHNICAL')
    | StatusId('MAG_ZOC_FORCE_CONDUIT_DURATION_TECHNICAL')
    | StatusId('MAG_FIRE_HEAT_DURATION_TECHNICAL')
    | StatusId('MAG_THUNDER_REVERBERATION_DURATION_TECHNICAL')
    | StatusId('MAG_PSYCHIC_MENTAL_FATIGUE_DURATION_TECHNICAL')
	| StatusId('MAG_VIOLENCE_DURATION_TECHNICAL')
	| StatusId('MAG_MOMENTUM_DURATION_TECHNICAL')
	| StatusId('MAG_CHARGED_LIGHTNING_DURATION_TECHNICAL')
	| StatusId('MAG_ATTACK_DEBUFF_DURATION_TECHNICAL')
	| StatusId('MAG_FORCE_SHIELD_WARD_TECHNICAL')
	| StatusId('MAG_GISH_ARCANE_ACUITY_DURATION_TECHNICAL')
	| StatusId('PASSIVE_AGONIZING_BLAST')
	| StatusId('PASSIVE_ARMOR_OF_AGATHYS')
	| StatusId('PASSIVE_ARMOR_OF_AGATHYS_ATTACKER')
	| StatusId('PASSIVE_BANE')
	| StatusId('PASSIVE_BLESS')
	| StatusId('PASSIVE_DARK_ONES_BLESSING')
	| StatusId('PASSIVE_DEFENSIVE_DUELIST')
	| StatusId('PASSIVE_DISCIPLE_OF_LIFE')
	| StatusId('PASSIVE_FIGHTING_STYLE_PROTECTION')
	| StatusId('PASSIVE_HEX')
	| StatusId('PASSIVE_HUNTERS_MARK')
	| StatusId('PASSIVE_REPELLING_BLAST')
	| StatusId('PASSIVE_STAGE_FRIGHT')
	| StatusId('PASSIVE_TRUE_STRIKE')
	| StatusId('PASSIVE_WARDING_FLARE')
	| StatusId('PASSIVE_STEADY_ATTACK')
	| StatusId('PASSIVE_FULL_SWING_ATTACK')
	| StatusId('PASSIVE_GAPING_WOUND_ATTACK')
	| StatusId('PASSIVE_OVERWHELM_ATTACK')
	| StatusId('INTERRUPT_SMITE_DIVINE_VFX')
	| StatusId('INTERRUPT_BARDIC_INSPIRATION_ATTACK')
	| StatusId('INTERRUPT_BARDIC_INSPIRATION_SAVINGTHROW')
	| StatusId('INTERRUPT_BARDIC_INSPIRATION_COMBAT_ATTACK')
	| StatusId('INTERRUPT_BARDIC_INSPIRATION_COMBAT_DEFENSE')
	| StatusId('INTERRUPT_BARDIC_INSPIRATION_COMBAT_DAMAGE')
	| StatusId('INTERRUPT_CUTTING_WORDS')
	| StatusId('INTERRUPT_CUTTING_WORDS_TARGET')
	| StatusId('INTERRUPT_DEFENSIVE_DUELIST')
	| StatusId('INTERRUPT_GIANTKILLER')
	| StatusId('INTERRUPT_RIPOSTE')
	| StatusId('MAGESLAYER_AURA_BUFF')
    | StatusId('YSRSLIDFWWADNIWHWIHLY_YWNK')
    | StatusId('SAVED_AGAINST_HOSTILE_SPELL')
    | StatusId('SANCTUARY_AURA')
    | StatusId('SEE_INVISIBILITY_SEEN')
    | StatusId('SEE_INVISIBILITY_REVEAL')
    | StatusId('SEE_INVISIBILITY_SUCCESS')
    | StatusId('PASSIVE_EPOCH_ACID')
    | StatusId('PASSIVE_ABSOLUTES_BANE')
    | StatusId('PASSIVE_BANEFUL_BOND')
    | StatusId('PASSIVE_HAROLDISH_DOOM')
    | StatusId('PASSIVE_INFERNAL_TOUCH')
    | StatusId('PASSIVE_SWEET_BLOODLETTING')
    | StatusId('PASSIVE_COMPELLED_DUEL')
    | StatusId('PASSIVE_LESSER_INFERNAL_TOUCH')
    | StatusId('PASSIVE_RUPTURING')
    | StatusId('PASSIVE_ABSOLUTE_NIGHT')
    | StatusId('PASSIVE_SHADOW_BLINDING')
    | StatusId('PASSIVE_CAUTERISER')
    | StatusId('PASSIVE_EPOCH_BURNING')
    | StatusId('PASSIVE_HELLSTALKER')
    | StatusId('PASSIVE_DAZZLING_RAY')
    | StatusId('PASSIVE_CHILLING_COUNTER')
    | StatusId('PASSIVE_INSIDIOUS_COLD')
    | StatusId('PASSIVE_EPOCH_CHILLED')
    | StatusId('PASSIVE_INFECTIOUS_MADNESS')
    | StatusId('PASSIVE_SPITEFUL_THUNDER')
    | StatusId('PASSIVE_DAZING_ECHO')
    | StatusId('PASSIVE_FLY_TRAP')
    | StatusId('PASSIVE_BLOODCURDLING_EMISSION')
    | StatusId('PASSIVE_TORTUROUS_EDGES')
    | StatusId('PASSIVE_PROMISED_VICTORY')
    | StatusId('PASSIVE_INFERNAL_WEAPON')
    | StatusId('PASSIVE_HANDMAIDENS_POISON')
    | StatusId('PASSIVE_MALEBOLGE_STINGER')
    | StatusId('PASSIVE_ENVENOM')
    | StatusId('PASSIVE_SUSSUR_WEAPON')
    | StatusId('PASSIVE_SHOCKING_STING')
    | StatusId('PASSIVE_COUNTERSHOCK')
    | StatusId('PASSIVE_INFESTED')
    | StatusId('PASSIVE_BAD_BREATH')
    | StatusId('PASSIVE_LESSER_INFERNAL_RETRIBUTION')
    | StatusId('PASSIVE_GRIM_IRONY')
    | StatusId('PASSIVE_OVERCHARGE')
    | StatusId('PASSIVE_IMPERIAL_RETALIATION')
    | StatusId('PASSIVE_SANCTIFIED_WEAPON')
	| StatusId('ATT_TIMESTOP_HELPER')
end


function CHT_IsFinesseWeapon(entity)
    entity = entity or context.AttackWeapon
    return HasWeaponProperty(WeaponProperties.Finesse, entity)
end

function CHT_IsVersatileWeapon(entity)
    entity = entity or context.AttackWeapon
    return HasWeaponProperty(WeaponProperties.Versatile, entity)
end

function CHT_DuelistCheck(entity)
	entity = entity or context.AttackWeapon
	result = CHT_IsFinesseWeapon(entity) & CHT_IsVersatileWeapon(entity)
	return ConditionResult(result.Result, {ConditionError("CHT_NotFinesseOrVersatile")})
end

function CHT_NotBalancedWeapon(entity)
	entity = entity or context.AttackWeapon
	result = ~HasStatus('CHT_DUELIST_REMOVED_VERSATILE', entity)
	return ConditionResult(result.Result, {ConditionError("CHT_WeaponAlreadyBalanced")})
end

function CHT_IsBalancedWeapon(entity)
	entity = entity or context.AttackWeapon
	result = HasStatus('CHT_DUELIST_REMOVED_VERSATILE', entity)
	return ConditionResult(result.Result, {ConditionError("CHT_WeaponNotBalanced")})
end

function CHT_NotBalancedWeaponActive(entity)
	entity = entity or context.Source
	result = ~HasStatus('CHT_DUELIST_REMOVED_VERSATILE_HELPER', entity)
	return ConditionResult(result.Result, {ConditionError("CHT_HasBalancedWeaponActive")})
end

function CHT_SpellSniperEmpoweredCheckCantrips()
    return 
	SpellId('Target_ChillTouch') | SpellId('Target_ChillTouch_UAWC_Melee') 
	| SpellId('Projectile_FireBolt') | SpellId('Projectile_MAG_FireBolt_Staff') | SpellId('Projectile_FireBolt_Goblin') | SpellId('Projectile_FireBolt_UAWC_Melee') | SpellId('Projectile_FireBolt_Monk') 
	| SpellId('Projectile_IllusionaryDart') 
	| SpellId('Projectile_MagicStone') 
	| SpellId('Projectile_RayOfFrost') | SpellId('Projectile_MAG_RayOfFrost_Staff') | SpellId('Projectile_RayOfFrost_UAWC_Melee') 
	| SpellId('Projectile_RockSlam') 
	| SpellId('Target_SonicBlast') 
	| SpellId('SD_Projectile_StarryWisp') | SpellId('SD_Projectile_StarryWisp_WS') | SpellId('CL_Projectile_OneDnD_StarryWisp_SHV_UAWC_Melee') 
	| SpellId('Target_WaterBullet')
end

function CHT_SpellSniperEmpoweredCheckLvl1()
    return 
	SpellId('Target_ChaosBolt') | SpellId('Target_ChaosBolt_2') | SpellId('Target_ChaosBolt_3') | SpellId('Target_ChaosBolt_4') | SpellId('Target_ChaosBolt_5') | SpellId('Target_ChaosBolt_6') | SpellId('Target_ChaosBolt_7') | SpellId('Target_ChaosBolt_8') | SpellId('Target_ChaosBolt_9') 
	| SpellId('Projectile_IceKnife') | SpellId('Projectile_IceKnife_2') | SpellId('Projectile_IceKnife_3') | SpellId('Projectile_IceKnife_4') | SpellId('Projectile_IceKnife_5') | SpellId('Projectile_IceKnife_6') | SpellId('Projectile_IceKnife_7') | SpellId('Projectile_IceKnife_8') | SpellId('Projectile_IceKnife_9') | SpellId('Projectile_MAG_IceKnife') 
	| SpellId('Projectile_GuidingBolt') | SpellId('Projectile_GuildingBolt_2') | SpellId('Projectile_GuildingBolt_3') | SpellId('Projectile_GuidingBolt_4') | SpellId('Projectile_GuidingBolt_5') | SpellId('Projectile_GuidingBolt_6') | SpellId('Projectile_GuidingBolt_7') | SpellId('Projectile_GuidingBolt_8') | SpellId('Projectile_GuidingBolt_9') | SpellId('Projectile_GuidingBolt_StarMap') 
	| SpellId('Projectile_MagicMissile') | SpellId('Projectile_MagicMissile_2') | SpellId('Projectile_MagicMissile_3') | SpellId('Projectile_MagicMissile_4') | SpellId('Projectile_MagicMissile_5') | SpellId('Projectile_MagicMissile_6') | SpellId('Projectile_MagicMissile_7') | SpellId('Projectile_MagicMissile_8') | SpellId('Projectile_MagicMissile_9') | SpellId('Projectile_UND_MagicMissile_SocietyOfBrilliance_Amulet') 
	| SpellId('Projectile_AcidArrow') | SpellId('Projectile_AcidArrow_2') | SpellId('Projectile_AcidArrow_3') | SpellId('Projectile_AcidArrow_4') | SpellId('Projectile_AcidArrow_5') | SpellId('Projectile_AcidArrow_6') | SpellId('Projectile_AcidArrow_7') | SpellId('Projectile_AcidArrow_8') | SpellId('Projectile_AcidArrow_9') | SpellId('Projectile_MAG_MelfsMagicArrow') 
	| SpellId('Projectile_RayOfSickness') | SpellId('Projectile_RayOfSickness_2') | SpellId('Projectile_RayOfSickness_3') | SpellId('Projectile_RayOfSickness_4') | SpellId('Projectile_RayOfSickness_5') | SpellId('Projectile_RayOfSickness_6') | SpellId('Projectile_RayOfSickness_7') | SpellId('Projectile_RayOfSickness_8') | SpellId('Projectile_RayOfSickness_9') | SpellId('Projectile_RayOfSickness_BookOfAnceintSecrets') | SpellId('Projectile_HAG_RayOfSickness_Staff') | SpellId('Projectile_MAG_Legendary_Chromatic_RayOfSickness') 
	| SpellId('Projectile_WitchBolt') | SpellId('Projectile_WitchBolt_2') | SpellId('Projectile_WitchBolt_3') | SpellId('Projectile_WitchBolt_4') | SpellId('Projectile_WitchBolt_5') | SpellId('Projectile_WitchBolt_6') | SpellId('Projectile_WitchBolt_7') | SpellId('Projectile_WitchBolt_8') | SpellId('Projectile_WitchBolt_9') | SpellId('Shout_WitchBolt_Activate')
end

function CHT_SpellSniperEmpoweredCheckLvl3()
    return 
	SpellId('Projectile_LightningArrow') | SpellId('Projectile_LightningArrow_4') | SpellId('Projectile_LightningArrow_5') | SpellId('Projectile_LightningArrow_6') | SpellId('Projectile_LightningArrow_7') | SpellId('Projectile_LightningArrow_8') | SpellId('Projectile_LightningArrow_9') 
	| SpellId('Zone_AetherLance') | SpellId('Zone_AetherLance_4') | SpellId('Zone_AetherLance_5') | SpellId('Zone_AetherLance_6') | SpellId('Zone_AetherLance_7') | SpellId('Zone_AetherLance_8') | SpellId('Zone_AetherLance_9') 
end

function CHT_RitualCasterCheck()
    return 
	SpellId('Target_AntHaul') | IsSpellChildOrVariantFromContext('Target_AntHaul') 
	| SpellId('Target_Ceremony') | IsSpellChildOrVariantFromContext('Target_Ceremony') | SpellId('Target_Ceremony_BlessWater') | IsSpellChildOrVariantFromContext('Target_Ceremony_BlessWater') | SpellId('Target_Ceremony_ComingOfAge') | IsSpellChildOrVariantFromContext('Target_Ceremony_ComingOfAge') | SpellId('Target_Ceremony_Dedication') | IsSpellChildOrVariantFromContext('Target_Ceremony_Dedication') 
	| SpellId('Shout_CommuneWithNature') | IsSpellChildOrVariantFromContext('Shout_CommuneWithNature') 
	| SpellId('Shout_DetectMagic') | IsSpellChildOrVariantFromContext('Shout_DetectMagic') 
	| SpellId('Shout_DetectThoughts') | IsSpellChildOrVariantFromContext('Shout_DetectThoughts') 
	| SpellId('Shout_DisguiseSelf') | IsSpellChildOrVariantFromContext('Shout_DisguiseSelf') | SpellId('Shout_DisguiseSelf_Dragonborn_Female') | SpellId('Shout_DisguiseSelf_Dragonborn_Male') | SpellId('Shout_DisguiseSelf_HalfOrc_Female') | SpellId('Shout_DisguiseSelf_HalfOrc_Male') | SpellId('Shout_DisguiseSelf_Drow_Female') | SpellId('Shout_DisguiseSelf_Drow_Male') | SpellId('Shout_DisguiseSelf_Dwarf_Female') | SpellId('Shout_DisguiseSelf_Dwarf_Male') | SpellId('Shout_DisguiseSelf_Elf_Female') | SpellId('Shout_DisguiseSelf_Elf_Male') | SpellId('Shout_DisguiseSelf_Githyanki_Female') | SpellId('Shout_DisguiseSelf_Githyanki_Male') | SpellId('Shout_DisguiseSelf_Gnome_Female') | SpellId('Shout_DisguiseSelf_Gnome_Male') | SpellId('Shout_DisguiseSelf_HalfElf_Female') | SpellId('Shout_DisguiseSelf_HalfElf_Male') | SpellId('Shout_DisguiseSelf_Halfling_Female') | SpellId('Shout_DisguiseSelf_Halfling_Male') | SpellId('Shout_DisguiseSelf_Human_Female') | SpellId('Shout_DisguiseSelf_Human_Male') | SpellId('Shout_DisguiseSelf_Tiefling_Female') | SpellId('Shout_DisguiseSelf_Tiefling_Male') 
	| SpellId('Target_Jump') | IsSpellChildOrVariantFromContext('Target_Jump') 
	| SpellId('Shout_FeatherFall') | IsSpellChildOrVariantFromContext('Shout_FeatherFall') 
	| SpellId('Target_FindFamiliar') | IsSpellChildOrVariantFromContext('Target_FindFamiliar') | SpellId('Target_FindFamiliar_Rat') | SpellId('Target_FindFamiliar_Spider') | SpellId('Target_FindFamiliar_Cat') | SpellId('Target_FindFamiliar_Crab') | SpellId('Target_FindFamiliar_Frog') | SpellId('Target_FindFamiliar_Raven') | SpellId('Target_FindFamiliar_Dog') 
	| SpellId('Target_Longstrider') | IsSpellChildOrVariantFromContext('Target_Longstrider') 
	| SpellId('Shout_SpeakWithAnimals') | IsSpellChildOrVariantFromContext('Shout_SpeakWithAnimals') 
	| SpellId('Target_SpeakWithDead') | IsSpellChildOrVariantFromContext('Target_SpeakWithDead') 
	| SpellId('Target_UnseenServant') | IsSpellChildOrVariantFromContext('Target_UnseenServant') 
	| SpellId('Shout_WaterWalk') | IsSpellChildOrVariantFromContext('Shout_WaterWalk')
end

function CHT_WearingMediumArmour(entity)
	entity = entity or context.Target
	local armor = GetActiveArmor(entity)
	local WearingMediumArmor = armor.ArmorType == ArmorType.Hide or armor.ArmorType == ArmorType.ChainShirt or armor.ArmorType == ArmorType.ScaleMail or armor.ArmorType == ArmorType.BreastPlate or armor.ArmorType == ArmorType.HalfPlate
	return ConditionResult(WearingMediumArmor)
end

--[[valuelist "ArmorType"
value "None"
value "Cloth"
value "Padded"
value "Leather"
value "StuddedLeather"
value "Hide"
value "ChainShirt"
value "ScaleMail"
value "BreastPlate"
value "HalfPlate"
value "RingMail"
value "ChainMail"
value "Splint"
value "Plate"]]

function CHT_PolearmMasterCheck(entity)
    entity = entity or context.Target
    return WieldingWeapon('Melee', false, false, entity) & WieldingWeapon('Versatile', false, false, entity) & ~HasShieldEquipped(entity) & ~WieldingWeapon('Melee', true, false, entity)
end
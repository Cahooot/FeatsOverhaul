// ==================================== Actor ====================================

// Add additional Expertise bonuses
new entry "Actor"
type "PassiveData"
data "DisplayName" "h03eb5577gda2dg69f3gad66gd11707b4d127"
data "Description" "hfc6d7e30gb93fga14fgc3e1g1a2a5f84ea2f"
data "Icon" "Action_Perform_Voice"
data "Properties" "Highlighted"
data "Boosts" "ProficiencyBonus(Skill,Deception);ExpertiseBonus(Deception);ProficiencyBonus(Skill,Persuasion);ExpertiseBonus(Persuasion);ProficiencyBonus(Skill,Intimidation);ExpertiseBonus(Intimidation);ProficiencyBonus(Skill,Performance);ExpertiseBonus(Performance);Ability(Charisma,1)"

// ==================================== Alert ====================================

// Make initiative bonus scale with proficiency bonus
new entry "Alert"
type "PassiveData"
data "DisplayName" "he6b8ffb1g75b8g919agc9fcg65e68e24230e"
data "Description" "h8f39c72dg4381g019fgd3begd6bdcadf31c2"
data "Icon" "PassiveFeature_Generic_Threat"
data "Properties" "Highlighted"
data "Boosts" "Initiative(2);StatusImmunity(SURPRISED);IF(CharacterLevelGreaterThan(4)):Initiative(1);IF(CharacterLevelGreaterThan(8)):Initiative(1);IF(CharacterLevelGreaterThan(12)):Initiative(1);IF(CharacterLevelGreaterThan(16)):Initiative(1);StatusImmunity(SURPRISED);ProficiencyBonus(Skill,Perception)"

// ==================================== Durable ====================================

// Now gives hp regen if you are at 60% or less hp
new entry "Durable"
type "PassiveData"
data "DisplayName" "h8b085007gbd97g8d18g4382g5c5d68618fcc;1"
data "Description" "h80dc8f77991549c094a6c020866c7fe0e9d4;1"
data "DescriptionParams" "RegainHitPoints()"
data "Icon" "PassiveFeature_Durable"
data "Properties" "Highlighted"
data "Boosts" "Ability(Constitution, 1)"
data "StatsFunctorContext" "OnTurn"
data "Conditions" "Combat() and not IsDowned()"
data "StatsFunctors" "IF(HasHPPercentageEqualOrLessThan(60)):RegainHitPoints(ProficiencyBonus+ConstitutionModifier)"

// ==================================== Great Weapon Master ====================================

// Damage bonus and attack roll penalty now scale with proficiency bonus. Bonus damage now also applies to spells that are melee weapon attacks but don't use weapon damage such as Pommel Strike
new entry "GreatWeaponMaster_BonusDamage"
type "PassiveData"
data "DisplayName" "h307c2db0ge721g3c9cg4b6fga18f158a62c4;1"
data "Description" "haa04cbe4g96bbg47d3g848bg793733ebf495;2"
data "DescriptionParams" "1"
data "Icon" "PassiveFeature_GreatWeaponMaster_BonusDamage"
data "PriorityOrder" "1"
data "Properties" "IsToggled;ToggledDefaultAddToHotbar;ToggledDefaultOn;Highlighted"
data "Boosts" "IF(GreatWeaponMaster(context.Source) and IsMeleeWeaponAttack() and HasPassive('GreatWeaponMaster_BonusDamage',context.Source)):RollBonus(MeleeWeaponAttack, LevelMapValue(CHT_GWM_SS_AttackPenalty));IF(GreatWeaponMaster(context.Source) and IsMeleeWeaponAttack() and HasPassive('GreatWeaponMaster_BonusDamage',context.Source)):DamageBonus(LevelMapValue(CHT_GWM_SS_Damage))"

// ==================================== Sentinel ====================================

// Add pushback to Sentinel's opportunity attack if you also have Polearm Master
new entry "Target_Sentinel_AttackOfOpportunity"
type "SpellData"
data "SpellType" "Target"
using "Target_MainHandAttack"
data "SpellSuccess" "IF(HasPassive('PolearmMaster_AttackOfOpportunity',context.Source) and (HasWeaponProperty(WeaponProperties.Reach, GetAttackWeapon(context.Source)) or Tagged('WPN_STAVE', GetAttackWeapon(context.Source)) or Tagged('WPN_TRIDENT', GetActiveWeapon(context.Source, true)) or Tagged('WPN_SPEAR', GetAttackWeapon(context.Source)))):Force(1.1);DealDamage(MainMeleeWeapon, MainMeleeWeaponDamageType);ExecuteWeaponFunctors(MainHand);ApplyStatus(SENTINEL,100,1)"
data "Icon" "PassiveFeature_Sentinel_Attack"
data "TooltipStatusApply" "ApplyStatus(SENTINEL,100,1)"

// ==================================== Sharpshooter ====================================

// Damage bonus and attack roll penalty now scale with proficiency bonus
new entry "Sharpshooter_AllIn"
type "PassiveData"
data "DisplayName" "h1bdf58ceg829dgc59bg332dg15f213bfdfc6;1"
data "Description" "h0aabaab9g8645g917fg5194g04fd1eea2d55;2"
data "DescriptionParams" "1"
data "Icon" "PassiveFeature_Sharpshooter_AllIn"
data "PriorityOrder" "1"
data "Properties" "IsToggled;ToggledDefaultAddToHotbar;ToggledDefaultOn;Highlighted"
data "Boosts" "IF(Sharpshooter(context.Source)):RollBonus(RangedWeaponAttack, LevelMapValue(CHT_GWM_SS_AttackPenalty));IF(Sharpshooter(context.Source)):RollBonus(RangedOffHandWeaponAttack, LevelMapValue(CHT_GWM_SS_AttackPenalty));IF(Sharpshooter(context.Source)):CharacterWeaponDamage(LevelMapValue(CHT_GWM_SS_Damage))"

// ==================================== Tavern Brawler ====================================

// Make attack roll and damage bonus scale with proficiency bonus instead of Strength
new entry "TavernBrawler"
type "PassiveData"
data "DisplayName" "h40099672g99d5ge597g2b9bgac0b47b23dd0;1"
data "Description" "haed3f9b3g3c23g82f5g5d71gb78ca8f34001;1"
data "DescriptionParams" "1"
data "Icon" "PassiveFeature_TavernBrawler"
data "Properties" "Highlighted"
data "Boosts" " IF(IsUnarmedAttack()):RollBonus(Attack,LevelMapValue(CHT_TB));IF(IsMeleeUnarmedAttack()):CharacterUnarmedDamage(LevelMapValue(CHT_TB));IF((IsRangedUnarmedAttack() or SpellId('Throw_ImprovisedWeapon') or SpellId('Throw_ImprovisedWeaponBerserker')) and not HasStatus('SG_Polymorph_BeastShape',context.Source)):DamageBonus(LevelMapValue(CHT_TB));IF((IsUnarmedAttack() and HasStatus('SG_Polymorph_BeastShape',context.Source) or HasStatus('SLAYER_PLAYER',context.Source) or HasStatus('SLAYER_PLAYER_10',context.Source)) and not (Tagged('MYRMIDON_AIR',context.Source) or Tagged('MYRMIDON_FIRE',context.Source) or Tagged('MYRMIDON_WATER',context.Source))):DamageBonus(LevelMapValue(CHT_TB))"

// ==================================== Tough ====================================

// Now gives +2 bonus to Constitution saving throws
new entry "Tough"
type "PassiveData"
data "DisplayName" "hc0a56c08gbc9fgc88bg6c9fgc6f5d075d0f5;1"
data "Description" "hd6e7dd41gf661g5bafg8632g841e0dbce7ac;2"
data "DescriptionParams" "Level*2"
data "Icon" "PassiveFeature_Tough"
data "Properties" "Highlighted"
data "Boosts" "IncreaseMaxHP(Level*2);RollBonus(SavingThrow,2,Constitution);Ability(Constitution,1)"

// ==================================== War Caster ====================================

// War Caster: Opportunity Spell can be used while under the effects of more non-hostile and non-spellcasting restricted Polymorphs, and can also be used while invisible
new entry "Interrupt_WarCaster"
type "InterruptData"
using "Interrupt_WarCaster"
// data "Conditions" "not HasSpellCastBlocked(context.Observer) and IsAbleToReact(context.Observer) and Self(context.Observer, context.Source) and not Self(context.Observer, context.Target) and Enemy() and not WieldingWeapon('Ammunition', false, false, context.Source) and not HasStatus('SG_Incapacitated', context.Source) and not HasStatus('SG_Unconscious', context.Source) and not (not Player(context.Source) and Tagged('AI_IGNORED_TARGET')  and not HasStatus('GNOLL_SUDDENRUSH')) and not HasStatus('SHOCKWAVE') and not (HasStatus('MOBILE_NO_AOO', context.Source) and HasStatus('MOBILE_NO_AOO_SOURCE', context.Target)) and not HasStatus('FLAMING_SPHERE_AURA') and not HasStatus('SNEAKING',context.Target) and not HasStatus('SG_Ignore_AOO',context.Target) and not AnyEntityIsItem()"
data "Conditions" "(Player(context.Observer) or not HasStatus('SG_Invisible',context.Observer)) and not HasSpellCastBlocked(context.Observer) and IsAbleToReact(context.Observer) and Self(context.Observer, context.Source) and not Self(context.Observer, context.Target) and Enemy() and not WieldingWeapon('Ammunition', false, false, context.Source) and not HasStatus('SG_Incapacitated', context.Source) and not HasStatus('SG_Unconscious', context.Source) and not (not Player(context.Source) and Tagged('AI_IGNORED_TARGET')  and not HasStatus('GNOLL_SUDDENRUSH')) and not HasStatus('SHOCKWAVE') and not (HasStatus('MOBILE_NO_AOO', context.Source) and HasStatus('MOBILE_NO_AOO_SOURCE', context.Target)) and not HasStatus('FLAMING_SPHERE_AURA') and not HasStatus('SNEAKING',context.Target) and not HasStatus('SG_Ignore_AOO',context.Target) and not AnyEntityIsItem()"
// data "EnableCondition" "not HasAnyStatus({'SG_Polymorph','SG_Blinded'}) or HasAnyStatus({'SG_Disguise','WILDSHAPE_STARRY_ARCHER_PLAYER','WILDSHAPE_STARRY_CHALICE_PLAYER','WILDSHAPE_STARRY_DRAGON_PLAYER'});"
data "EnableCondition" "(not HasStatus('SG_Polymorph') or Goon_IsUnrestrictedPolymorphStatus()) and not HasStatus('SG_Blinded')"
// data "InterruptFlags" ""
data "InterruptFlags" "InterruptWhileInvisible"
